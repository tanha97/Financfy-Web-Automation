name: Playwright ‚Äî Staging

on:
  # push:
  #   branches: [ "staging" ]   # edit branch names as you use
  workflow_dispatch:

jobs:
  test:
    name: Run tests against Staging
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

    # Cache Node.js dependencies (npm + node_modules)
      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      

    # Cache Playwright browsers
      - name: Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-browsers
          restore-keys: |
            ${{ runner.os }}-playwright-browsers

      - name: Install dependencies
        run: npm ci

    # Install Playwright browsers (will use cache if exists)    
      - name: Install Playwright browsers
        run: npx playwright install --with-deps

    # Run Playwright tests (HTML + Allure reports enabled in config)      
      - name: Run Playwright tests (staging)
        env:
         ENV: staging
         STAGING_URL: ${{ secrets.STAGING_URL }}
         STAGING_MOBILE_NUMBER: ${{ secrets.STAGING_MOBILE_NUMBER }}
         STAGING_PASSWORD: ${{ secrets.STAGING_PASSWORD }}
          # API_KEY: ${{ secrets.STAGING_API_KEY }}
        run: npx playwright test

      - name: Check Allure Results
        run: ls -la allure-results

      - name: Install Allure CLI
        run: npm install -g allure-commandline
          
      - name: Generate Allure Report
        if: always()
        run: |
          mkdir -p allure-results
          allure generate allure-results --clean -o allure-report || echo "‚ö†Ô∏è No allure results to generate"

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-staging
          path: playwright-report
      
     # Upload Allure Report
      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-staging
          path: allure-report
          if-no-files-found: warn

  deploy-allure:
    if: always()
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Allure Report Artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report-staging
          path: ./allure-report
        continue-on-error: true

      - name: Check if Allure Report exists
        id: check_allure
        run: |
          if [ ! -d "./allure-report" ] || [ -z "$(ls -A ./allure-report)" ]; then
            echo "no_report=true" >> $GITHUB_ENV
          else
            echo "no_report=false" >> $GITHUB_ENV
          fi


      - name: Deploy to GitHub Pages
        if: env.no_report == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
      
      - name: Set Allure Report URL
        if: env.no_report == 'false'
        run: |
          REPO_NAME=${GITHUB_REPOSITORY#*/}
          echo "ALLURE_REPORT_URL=https://${GITHUB_REPOSITORY_OWNER}.github.io/$REPO_NAME" >> $GITHUB_ENV


          

    # ‚úÖ Send email notification to Product Manager
      - name: Send email notification
        if: always()  
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "Playwright CI - ${{ job.status }}"
          to: "tanha.tahity@vivasoftltd.com , amirul.islam@vivasoftltd.com"
          from: "Financfy QA <${{ secrets.SMTP_USERNAME }}>"
          body: |
            Hello Team,

            The workflow has completed with status: ${{ job.status }}.

            Repository: ${{ github.repository }}
            Workflow: ${{ github.workflow }}
            Run Number: ${{ github.run_number }}
            Run URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
             ${{ env.no_report == 'false' && 'üîó Allure Report: ${{ env.ALLURE_REPORT_URL }}/' || '‚ö†Ô∏è No Allure report was generated (no tests executed or all failed before results).' }}
            
